// Generated by https://quicktype.io
using System;
using System.Text.Json.Serialization;

namespace SpotifyApi.NetCore
{
    ///<summary>Playlist object (full)</summary>
    ///<remarks>
    /// https://developer.spotify.com/documentation/web-api/reference/object-model/#playlist-object-full 
    /// </remarks>
    public partial class Playlist
    {
        ///<summary>
        /// Returns true if context is not search and the owner allows other users to modify the playlist. 
        /// Otherwise returns false.
        ///</summary>
        [JsonPropertyName("collaborative")]
        public bool Collaborative { get; set; }

        ///<summary>
        /// The playlist description. Only returned for modified, verified playlists, otherwise null.
        ///</summary>
        [JsonPropertyName("description")]
        public string Description { get; set; }

        ///<summary>
        /// Known external URLs for this playlist.
        ///</summary>
        [JsonPropertyName("external_urls")]
        public ExternalUrls ExternalUrls { get; set; }

        ///<summary>
        /// Information about the followers of the playlist.
        ///</summary>
        [JsonPropertyName("followers")]
        public Followers Followers { get; set; }

        ///<summary>
        /// A link to the Web API endpoint providing full details of the playlist.
        ///</summary>
        [JsonPropertyName("href")]
        public string Href { get; set; }

        ///<summary>
        /// The Spotify ID for the playlist.
        ///</summary>
        [JsonPropertyName("id")]
        public string Id { get; set; }

        ///<summary>
        /// Images for the playlist. The array may be empty or contain up to three images. The images 
        /// are returned by size in descending order. See Working with Playlists.Note: If returned, 
        /// the source URL for the image ( url ) is temporary and will expire in less than a day.
        ///</summary>
        [JsonPropertyName("images")]
        public Image[] Images { get; set; }

        ///<summary>
        /// The name of the playlist.
        ///</summary>
        [JsonPropertyName("name")]
        public string Name { get; set; }

        ///<summary>
        /// The user who owns the playlist
        ///</summary>
        [JsonPropertyName("owner")]
        public User Owner { get; set; }

        [JsonPropertyName("primary_color")]
        public object PrimaryColor { get; set; }

        ///<summary>
        /// The playlist’s public/private status: true the playlist is public, false the playlist is 
        /// private, null the playlist status is not relevant. 
        ///</summary>
        [JsonPropertyName("public")]
        public bool? Public { get; set; }

        ///<summary>
        /// The version identifier for the current playlist. 
        ///</summary>
        [JsonPropertyName("snapshot_id")]
        public string SnapshotId { get; set; }

        ///<summary>
        /// Information about the tracks of the playlist.
        ///</summary>
        [JsonPropertyName("tracks")]
        public Paged<PlaylistTrack> Tracks { get; set; }

        ///<summary>
        /// The object type: “playlist”
        ///</summary>
        [JsonPropertyName("type")]
        public string Type { get; set; }

        ///<summary>
        /// The Spotify URI for the playlist.
        ///</summary>
        [JsonPropertyName("uri")]
        public string Uri { get; set; }
    }

    ///<summary>Playlist object (simplified)</summary>
    ///<remarks>
    /// https://developer.spotify.com/documentation/web-api/reference/object-model/#playlist-object-simplified 
    /// </remarks>
    public partial class PlaylistSimplified
    {
        ///<summary>
        /// Returns true if context is not search and the owner allows other users to modify the playlist. 
        /// Otherwise returns false.
        ///</summary>
        [JsonPropertyName("collaborative")]
        public bool Collaborative { get; set; }

        ///<summary>
        /// The playlist description. Only returned for modified, verified playlists, otherwise null.
        ///</summary>
        [JsonPropertyName("description")]
        public string Description { get; set; }

        ///<summary>
        /// Known external URLs for this playlist.
        ///</summary>
        [JsonPropertyName("external_urls")]
        public ExternalUrls ExternalUrls { get; set; }

        ///<summary>
        /// A link to the Web API endpoint providing full details of the playlist.
        ///</summary>
        [JsonPropertyName("href")]
        public string Href { get; set; }

        ///<summary>
        /// The Spotify ID for the playlist.
        ///</summary>
        [JsonPropertyName("id")]
        public string Id { get; set; }

        ///<summary>
        /// Images for the playlist. The array may be empty or contain up to three images. The images 
        /// are returned by size in descending order. See Working with Playlists. Note: If returned, 
        /// the source URL for the image(url ) is temporary and will expire in less than a day.
        ///</summary>
        [JsonPropertyName("images")]
        public Image[] Images { get; set; }

        ///<summary>
        /// The name of the playlist.
        ///</summary>
        [JsonPropertyName("name")]
        public string Name { get; set; }

        ///<summary>
        /// The user who owns the playlist
        ///</summary>
        [JsonPropertyName("owner")]
        public User Owner { get; set; }

        [JsonPropertyName("primary_color")]
        public object PrimaryColor { get; set; }

        ///<summary>
        /// The playlist’s public/private status: true the playlist is public, false the playlist is 
        /// private, null the playlist status is not relevant. 
        ///</summary>
        [JsonPropertyName("public")]
        public bool? Public { get; set; }

        ///<summary>
        /// The version identifier for the current playlist.
        ///</summary>
        [JsonPropertyName("snapshot_id")]
        public string SnapshotId { get; set; }

        ///<summary>
        /// A collection containing a link ( href ) to the Web API endpoint where full details of the 
        /// playlist’s tracks can be retrieved, along with the total number of tracks in the playlist.
        ///</summary>
        [JsonPropertyName("tracks")]
        public PlaylistTracks Tracks { get; set; }

        ///<summary>
        /// The object type: “playlist”
        ///</summary>
        [JsonPropertyName("type")]
        public string Type { get; set; }

        ///<summary>
        /// The Spotify URI for the playlist.
        ///</summary>
        [JsonPropertyName("uri")]
        public string Uri { get; set; }
    }

    ///<summary>
    /// A collection containing a link ( href ) to the Web API endpoint where full details of the playlist’s 
    /// tracks can be retrieved, along with the total number of tracks in the playlist.
    ///</summary>
    ///<remarks>
    /// https://developer.spotify.com/documentation/web-api/reference/object-model/#playlist-object-simplified
    /// </remarks>
    public partial class PlaylistTracks
    {
        [JsonPropertyName("href")]
        public string Href { get; set; }

        [JsonPropertyName("total")]
        public int Total { get; set; }
    }

    ///<summary>
    /// Playlist track object
    ///</summary>
    ///<remarks>
    /// https://developer.spotify.com/documentation/web-api/reference/object-model/#playlist-track-object
    /// </remarks>
    public partial class PlaylistTrack
    {
        ///<summary>
        /// The date and time the track was added. Note that some very old playlists may return null 
        /// in this field.
        ///</summary>
        [JsonPropertyName("added_at")]
        public DateTimeOffset? AddedAt { get; set; }

        ///<summary>
        /// The Spotify user who added the track. Note that some very old playlists may return null 
        /// in this field.
        ///</summary>
        [JsonPropertyName("added_by")]
        public User AddedBy { get; set; }

        ///<summary>
        /// Whether this track is a local file or not.
        ///</summary>
        [JsonPropertyName("is_local")]
        public bool IsLocal { get; set; }

        [JsonPropertyName("primary_color")]
        public string PrimaryColor { get; set; }

        ///<summary>
        /// Information about the track.
        ///</summary>
        [JsonPropertyName("track")]
        public Track Track { get; set; }

        [JsonPropertyName("video_thumbnail")]
        public VideoThumbnail VideoThumbnail { get; set; }
    }

    public partial class PlaylistPaged
    {
        [JsonPropertyName("href")]
        public string Href { get; set; }

        [JsonPropertyName("items")]
        public PlaylistTrack[] Items { get; set; }

        [JsonPropertyName("limit")]
        public int Limit { get; set; }

        [JsonPropertyName("next")]
        public string Next { get; set; }

        [JsonPropertyName("offset")]
        public int Offset { get; set; }

        [JsonPropertyName("previous")]
        public string Previous { get; set; }

        [JsonPropertyName("total")]
        public int Total { get; set; }
    }

    ///<summary>
    /// Upon adding items to a playlist a snapshot_id is returned.
    ///</summary>
    public partial class PlaylistSnapshotID
    {
        ///<summary>
        /// A snapshot_id which identifies a version of the playlist for future requests.
        ///</summary>
        [JsonPropertyName("snapshot_id")]
        public string SnapshotID { get; set; }
    }
}
