@using WebApis.Net6.Spotify.Models
@using WebApis.Net6.Spotify.Models.Responses
@using WebApis.Net6.Spotify.WebApiEndpoints
@using WebApis.Net6.Spotify
@inject IWApiArtist wApiArtist

<h3>TestingWebApisNet6</h3>

@if(artist is not null)
{
    <div>
        <div class="MCDivTestHeader">
            <span>GetArtist</span>
        </div>
        <div class="MCDivTestResults">
            <span>@artist.Name</span><br />
        </div>
    </div>
}
<br />
@if(severalArtists?.Artists?.Length > 0)
{
    <div>
        <div class="MCDivTestHeader">
            <span>GetSeveralArtists</span>
        </div>
        <div class="MCDivTestResults">
        @foreach(Artist a in severalArtists.Artists)
        {
            <span>@a.Name</span><br />
        }
        </div>
    </div>
}
<br />

@if(artistsAlbumsList?.Count > 0)
{
    <div>
        <div class="MCDivTestHeader">
            <span>GetArtistsAlbums</span>
        </div>
        <div class="MCDivTestResults">
        @foreach(Album album in artistsAlbumsList)
        {
            <span>@album.Name</span><br />
        }
        </div>
    </div>
}
<br />

@****************************************

@if(savedAlbumsList?.Count > 0)
{
    <div>
        <div class="MCDivTestHeader">
            <span>GetSavedAlbums</span>
        </div>
        <div class="MCDivTestResults">
        @foreach(RAlbum ralbum in savedAlbumsList)
        {
            if (!string.IsNullOrWhiteSpace(ralbum.Album?.Name))
            {
                <span>@ralbum.Album?.Name</span><br />
            }
        }
        </div>
    </div>
}
<br />
@if(checkedSaveAlbumsBools?.Length > 0)
{
    <div>
        <div class="MCDivTestHeader">
            <span>PutSaveAlbums and GetCheckSavedAlbums</span>
        </div>
        <div class="MCDivTestResults">
        @foreach(bool saved in checkedSaveAlbumsBools)
        {
            <span>@saved</span><br />
        }
        </div>
    </div>
}
<br />
@if(checkedRemoveAlbumsBools?.Length > 0)
{
    <div>
        <div class="MCDivTestHeader">
            <span>DeleteRemoveAlbums and GetCheckSavedAlbums</span>
        </div>
        <div class="MCDivTestResults">
        @foreach(bool saved in checkedRemoveAlbumsBools)
        {
            <span>@saved</span><br />
        }
        </div>
    </div>
}
<br />
@if(newAlbumReleases?.Count > 0)
{
    <div>
        <div class="MCDivTestHeader">
            <span>GetNewReleases</span>
        </div>
        <div class="MCDivTestResults">
        @foreach(Album album in newAlbumReleases)
        {
            if (!string.IsNullOrWhiteSpace(album.Name))
            {
                <span>@album.Name</span><br />
            }
        }
        </div>
    </div>
}
<br />

****************************************@

@code {
    Artist? artist;
    RArtists? severalArtists;
    List<Album> artistsAlbumsList = new();
    //List<RAlbum> savedAlbumsList = new();
    //bool[]? checkedSaveAlbumsBools;
    //bool[]? checkedRemoveAlbumsBools;
    //List<Album> newAlbumReleases = new();

    protected override async Task OnInitializedAsync()
    {
        //artist = await wApiArtist.GetArtist("0TnOYISbd1XYRBk9myaseg");

        //severalArtists = await wApiArtist.GetSeveralArtists(new string[]
        //{
        //    "2CIMQHirSU0MQqyYHq0eOx", "57dN52uHvrHOxijzpIgu3E", "1vCWHaC5f2uS3yhpwWbIA6"
        //});

        Paged<Album>? artistsAlbums = await wApiArtist.GetArtistsAlbums("0TnOYISbd1XYRBk9myaseg",
            include_groups: new WApiSpotifyGlobals.IncludeGroups[] { WApiSpotifyGlobals.IncludeGroups.single }, limit: 50);
        if (artistsAlbums?.Items?.Length > 0)
        {
            artistsAlbumsList.AddRange(artistsAlbums.Items);
        }
        while (!string.IsNullOrWhiteSpace(artistsAlbums?.Next))
        {
            artistsAlbums = await wApiArtist.GetNextPageArtistsAlbums(artistsAlbums.Next);
            if (artistsAlbums?.Items?.Length > 0)
            {
                artistsAlbumsList.AddRange(artistsAlbums.Items);
            }
        }

        /*******************************

        Paged<RAlbum>? savedAlbums = await wApiAlbum.GetSavedAlbums(5);
        if (savedAlbums?.Items?.Length > 0)
        {
            savedAlbumsList.AddRange(savedAlbums.Items);
        }
        while (!string.IsNullOrWhiteSpace(savedAlbums?.Next))
        {
            savedAlbums = await wApiAlbum.GetNextPageSavedAlbums(savedAlbums.Next);
            if (savedAlbums?.Items?.Length > 0)
            {
                savedAlbumsList.AddRange(savedAlbums.Items);
            }
        }

        _ = await wApiAlbum.PutSaveAlbums(new string[]
        {
            "382ObEPsp2rxGrnsizN5TX", "1A2GTWGtFfWp7KSQTwWOyo", "2noRn2Aes5aoNVsU6iWThc"
        });

        checkedSaveAlbumsBools = await wApiAlbum.GetCheckSavedAlbums(new string[]
        {
            "382ObEPsp2rxGrnsizN5TX", "1A2GTWGtFfWp7KSQTwWOyo", "2noRn2Aes5aoNVsU6iWThc"
        });

        _ = await wApiAlbum.DeleteRemoveAlbums(new string[]
        {
            "382ObEPsp2rxGrnsizN5TX", "1A2GTWGtFfWp7KSQTwWOyo", "2noRn2Aes5aoNVsU6iWThc"
        });

        checkedRemoveAlbumsBools = await wApiAlbum.GetCheckSavedAlbums(new string[]
        {
            "382ObEPsp2rxGrnsizN5TX", "1A2GTWGtFfWp7KSQTwWOyo", "2noRn2Aes5aoNVsU6iWThc"
        });

        RPagedAlbums? rPagedAlbums = await wApiAlbum.GetNewReleases("SE");
        if (rPagedAlbums?.Albums?.Items?.Length > 0)
        {
            newAlbumReleases.AddRange(rPagedAlbums.Albums.Items);
        }
        while (!string.IsNullOrWhiteSpace(rPagedAlbums?.Albums?.Next))
        {
            rPagedAlbums = await wApiAlbum.GetNextPageNewReleases(rPagedAlbums.Albums.Next);
            if (rPagedAlbums?.Albums?.Items?.Length > 0)
            {
                newAlbumReleases.AddRange(rPagedAlbums.Albums.Items);
            }
        }

        *******************************/

        await base.OnInitializedAsync();
    }
}
