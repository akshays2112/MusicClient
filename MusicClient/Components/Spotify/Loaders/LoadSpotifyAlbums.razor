@using MusicClient.Data.SQLServer.Models.Spotify
@using MusicClient.Data.SQLServer.MusicClientDbOperations.Spotify
@using SpotifyApi.NetCore
@inject ITracksApi tracksApi

<button class="btn btn-primary" @onclick=LoadSpotifyAlbumsAsync>Load Spotify Albums</button>
<hr />
<table class="table">
    @if (MusicClient.Data.Globals.PreloadedSpotifyAlbums?.Count > 0)
    {
        foreach (SpotifyAlbum spotifyAlbum in MusicClient.Data.Globals.PreloadedSpotifyAlbums)
        {
            <tr>
                <td>@spotifyAlbum.ID</td>
                <td>@spotifyAlbum.AlbumID</td>
                <td>@spotifyAlbum.Name</td>
                <td>@spotifyAlbum.ReleaseDate</td>
            </tr>
        }
    }
</table>
<hr />

@code {
    async Task LoadSpotifyAlbumsAsync()
    {
        foreach (SpotifyTrack spotifyTrack in MusicClient.Data.Globals.PreloadedSpotifyTracks)
        {
            Track track = await tracksApi.GetTrack(spotifyTrack.TrackID, Globals.SpotifyAccessToken?.AccessToken);
            SpotifyAlbums spotifyAlbums = new();
            SpotifyAlbum newSpotifyAlbum = SpotifyAlbum.NewSpotifyAlbum(track.Album.Id, track.Album.Name, MusicClient.Data.Globals.ConvertToDatetime(track.Album.ReleaseDate));
            try
            {
                spotifyAlbums.AddSpotifyAlbum(newSpotifyAlbum);
                StateHasChanged();
            }
            catch { }
        }

        await base.OnInitializedAsync();
    }
}
